
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package javalette;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\137\000\002\002\004\000\002\002\003\000\002\003" +
    "\010\000\002\003\010\000\002\003\010\000\002\004\003" +
    "\000\002\004\004\000\002\005\004\000\002\006\002\000" +
    "\002\006\003\000\002\006\005\000\002\007\005\000\002" +
    "\010\002\000\002\010\004\000\002\011\005\000\002\012" +
    "\002\000\002\012\004\000\002\013\003\000\002\013\003" +
    "\000\002\013\005\000\002\013\006\000\002\013\005\000" +
    "\002\013\005\000\002\013\005\000\002\013\004\000\002" +
    "\013\007\000\002\013\011\000\002\013\007\000\002\013" +
    "\004\000\002\013\007\000\002\013\012\000\002\013\010" +
    "\000\002\014\003\000\002\014\005\000\002\015\003\000" +
    "\002\015\005\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\016\003\000\002\016\003\000\002\017" +
    "\003\000\002\017\004\000\002\020\002\000\002\020\003" +
    "\000\002\020\005\000\002\021\003\000\002\021\003\000" +
    "\002\021\003\000\002\021\003\000\002\021\003\000\002" +
    "\021\006\000\002\021\003\000\002\021\005\000\002\021" +
    "\005\000\002\021\005\000\002\022\004\000\002\022\003" +
    "\000\002\023\005\000\002\023\006\000\002\023\004\000" +
    "\002\023\003\000\002\024\004\000\002\024\004\000\002" +
    "\024\003\000\002\025\005\000\002\025\003\000\002\026" +
    "\005\000\002\026\003\000\002\027\005\000\002\027\003" +
    "\000\002\030\005\000\002\030\003\000\002\031\005\000" +
    "\002\031\003\000\002\032\002\000\002\032\003\000\002" +
    "\032\005\000\002\033\003\000\002\033\003\000\002\034" +
    "\003\000\002\034\003\000\002\034\003\000\002\035\003" +
    "\000\002\035\003\000\002\035\003\000\002\035\003\000" +
    "\002\035\003\000\002\035\003\000\002\036\003\000\002" +
    "\037\003\000\002\037\004\000\002\040\005\000\002\041" +
    "\003\000\002\041\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\251\000\020\041\005\042\007\047\017\053\014\055" +
    "\015\056\013\063\012\001\002\000\004\063\044\001\002" +
    "\000\010\036\uffdb\037\uffdb\063\uffdb\001\002\000\004\002" +
    "\000\001\002\000\010\036\uffdc\037\uffdc\063\uffdc\001\002" +
    "\000\022\002\ufffc\041\005\042\007\047\017\053\014\055" +
    "\015\056\013\063\012\001\002\000\006\036\041\063\uffd8" +
    "\001\002\000\006\036\uffd9\063\uffd9\001\002\000\010\036" +
    "\uffda\037\uffda\063\uffda\001\002\000\004\063\026\001\002" +
    "\000\004\053\021\001\002\000\004\002\020\001\002\000" +
    "\010\036\uffdd\037\uffdd\063\uffdd\001\002\000\004\002\001" +
    "\001\002\000\004\063\022\001\002\000\004\012\023\001" +
    "\002\000\004\063\024\001\002\000\004\011\025\001\002" +
    "\000\022\002\ufffd\041\ufffd\042\ufffd\047\ufffd\053\ufffd\055" +
    "\ufffd\056\ufffd\063\ufffd\001\002\000\004\007\027\001\002" +
    "\000\016\010\ufff5\041\ufff5\042\ufff5\047\ufff5\056\ufff5\063" +
    "\ufff5\001\002\000\016\010\032\041\005\042\007\047\017" +
    "\056\013\063\012\001\002\000\004\063\035\001\002\000" +
    "\004\011\034\001\002\000\016\010\ufff4\041\ufff4\042\ufff4" +
    "\047\ufff4\056\ufff4\063\ufff4\001\002\000\022\002\ufffe\041" +
    "\ufffe\042\ufffe\047\ufffe\053\ufffe\055\ufffe\056\ufffe\063\ufffe" +
    "\001\002\000\004\011\036\001\002\000\016\010\ufff6\041" +
    "\ufff6\042\ufff6\047\ufff6\056\ufff6\063\ufff6\001\002\000\004" +
    "\063\uffd7\001\002\000\006\036\041\063\uffa7\001\002\000" +
    "\006\036\uffa8\063\uffa8\001\002\000\004\063\uffa6\001\002" +
    "\000\004\002\ufffb\001\002\000\004\004\045\001\002\000" +
    "\016\005\ufff9\041\005\042\007\047\017\056\013\063\012" +
    "\001\002\000\004\063\253\001\002\000\004\005\053\001" +
    "\002\000\006\005\ufff8\006\051\001\002\000\016\005\ufff9" +
    "\041\005\042\007\047\017\056\013\063\012\001\002\000" +
    "\004\005\ufff7\001\002\000\004\007\054\001\002\000\054" +
    "\004\ufff2\007\ufff2\010\ufff2\011\ufff2\021\ufff2\022\ufff2\041" +
    "\ufff2\042\ufff2\044\ufff2\045\ufff2\046\ufff2\047\ufff2\050\ufff2" +
    "\052\ufff2\054\ufff2\056\ufff2\057\ufff2\060\ufff2\061\ufff2\062" +
    "\ufff2\063\ufff2\001\002\000\022\002\uffff\041\uffff\042\uffff" +
    "\047\uffff\053\uffff\055\uffff\056\uffff\063\uffff\001\002\000" +
    "\054\004\110\007\054\010\107\011\106\021\102\022\100" +
    "\041\005\042\007\044\072\045\066\046\064\047\017\050" +
    "\060\052\111\054\105\056\013\057\103\060\062\061\061" +
    "\062\101\063\070\001\002\000\044\011\uffc8\012\uffc8\017" +
    "\uffc8\020\uffc8\021\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8" +
    "\027\uffc8\030\uffc8\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035" +
    "\uffc8\037\132\001\002\000\014\041\005\042\007\047\017" +
    "\056\013\063\244\001\002\000\052\005\uffd2\006\uffd2\011" +
    "\uffd2\012\uffd2\017\uffd2\020\uffd2\021\uffd2\023\uffd2\024\uffd2" +
    "\025\uffd2\026\uffd2\027\uffd2\030\uffd2\031\uffd2\032\uffd2\033" +
    "\uffd2\034\uffd2\035\uffd2\037\uffd2\040\uffd2\001\002\000\052" +
    "\005\uffcd\006\uffcd\011\uffcd\012\uffcd\017\uffcd\020\uffcd\021" +
    "\uffcd\023\uffcd\024\uffcd\025\uffcd\026\uffcd\027\uffcd\030\uffcd" +
    "\031\uffcd\032\uffcd\033\uffcd\034\uffcd\035\uffcd\037\uffcd\040" +
    "\uffcd\001\002\000\042\011\uffc4\012\uffc4\017\237\020\uffc4" +
    "\021\uffc4\023\uffc4\024\uffc4\025\uffc4\026\uffc4\027\uffc4\030" +
    "\uffc4\031\uffc4\032\uffc4\033\uffc4\034\uffc4\035\uffc4\001\002" +
    "\000\004\004\231\001\002\000\046\005\uffc1\006\uffc1\011" +
    "\uffc1\012\uffc1\020\162\021\uffc1\023\uffc1\024\uffc1\025\uffc1" +
    "\026\uffc1\027\uffc1\030\uffc1\031\uffc1\032\uffc1\033\uffc1\034" +
    "\uffc1\035\uffc1\040\uffc1\001\002\000\004\004\222\001\002" +
    "\000\044\005\uffbf\006\uffbf\011\uffbf\012\uffbf\021\uffbf\023" +
    "\uffbf\024\uffbf\025\uffbf\026\uffbf\027\uffbf\030\uffbf\031\uffbf" +
    "\032\uffbf\033\uffbf\034\uffbf\035\uffbf\040\uffbf\001\002\000" +
    "\060\004\121\011\uffd3\012\uffd3\013\215\014\214\015\213" +
    "\017\uffd3\020\uffd3\021\uffd3\023\uffd3\024\uffd3\025\uffd3\026" +
    "\uffd3\027\uffd3\030\uffd3\031\uffd3\032\uffd3\033\uffd3\034\uffd3" +
    "\035\uffd3\036\uffd9\037\uffd3\063\uffd9\001\002\000\044\005" +
    "\uffbd\006\uffbd\011\uffbd\012\210\021\uffbd\023\uffbd\024\uffbd" +
    "\025\uffbd\026\207\027\206\030\uffbd\031\uffbd\032\uffbd\033" +
    "\uffbd\034\uffbd\035\uffbd\040\uffbd\001\002\000\052\005\uffcf" +
    "\006\uffcf\011\uffcf\012\uffcf\017\uffcf\020\uffcf\021\uffcf\023" +
    "\uffcf\024\uffcf\025\uffcf\026\uffcf\027\uffcf\030\uffcf\031\uffcf" +
    "\032\uffcf\033\uffcf\034\uffcf\035\uffcf\037\uffcf\040\uffcf\001" +
    "\002\000\036\005\uffbb\006\uffbb\011\uffbb\021\203\023\uffbb" +
    "\024\uffbb\025\202\030\uffbb\031\uffbb\032\uffbb\033\uffbb\034" +
    "\uffbb\035\uffbb\040\uffbb\001\002\000\032\005\uffb9\006\uffb9" +
    "\011\uffb9\023\174\024\uffb9\030\173\031\172\032\171\033" +
    "\177\034\176\035\175\040\uffb9\001\002\000\054\004\ufff1" +
    "\007\ufff1\010\ufff1\011\ufff1\021\ufff1\022\ufff1\041\ufff1\042" +
    "\ufff1\044\ufff1\045\ufff1\046\ufff1\047\ufff1\050\ufff1\052\ufff1" +
    "\054\ufff1\056\ufff1\057\ufff1\060\ufff1\061\ufff1\062\ufff1\063" +
    "\ufff1\001\002\000\014\005\uffb7\006\uffb7\011\uffb7\024\166" +
    "\040\uffb7\001\002\000\004\011\165\001\002\000\022\004" +
    "\110\044\072\050\060\054\105\060\062\061\061\062\101" +
    "\063\115\001\002\000\052\005\uffd1\006\uffd1\011\uffd1\012" +
    "\uffd1\017\uffd1\020\uffd1\021\uffd1\023\uffd1\024\uffd1\025\uffd1" +
    "\026\uffd1\027\uffd1\030\uffd1\031\uffd1\032\uffd1\033\uffd1\034" +
    "\uffd1\035\uffd1\037\uffd1\040\uffd1\001\002\000\022\004\110" +
    "\044\072\050\060\054\105\060\062\061\061\062\101\063" +
    "\115\001\002\000\004\004\154\001\002\000\004\063\145" +
    "\001\002\000\052\005\uffd0\006\uffd0\011\uffd0\012\uffd0\017" +
    "\uffd0\020\uffd0\021\uffd0\023\uffd0\024\uffd0\025\uffd0\026\uffd0" +
    "\027\uffd0\030\uffd0\031\uffd0\032\uffd0\033\uffd0\034\uffd0\035" +
    "\uffd0\037\uffd0\040\uffd0\001\002\000\056\004\ufff0\007\ufff0" +
    "\010\ufff0\011\ufff0\021\ufff0\022\ufff0\041\ufff0\042\ufff0\043" +
    "\ufff0\044\ufff0\045\ufff0\046\ufff0\047\ufff0\050\ufff0\052\ufff0" +
    "\054\ufff0\056\ufff0\057\ufff0\060\ufff0\061\ufff0\062\ufff0\063" +
    "\ufff0\001\002\000\064\002\ufff3\004\ufff3\007\ufff3\010\ufff3" +
    "\011\ufff3\021\ufff3\022\ufff3\041\ufff3\042\ufff3\043\ufff3\044" +
    "\ufff3\045\ufff3\046\ufff3\047\ufff3\050\ufff3\052\ufff3\053\ufff3" +
    "\054\ufff3\055\ufff3\056\ufff3\057\ufff3\060\ufff3\061\ufff3\062" +
    "\ufff3\063\ufff3\001\002\000\026\004\110\021\102\022\100" +
    "\044\072\050\060\054\105\060\062\061\061\062\101\063" +
    "\137\001\002\000\030\004\110\011\117\021\102\022\100" +
    "\044\072\050\060\054\105\060\062\061\061\062\101\063" +
    "\115\001\002\000\056\004\uffef\007\uffef\010\uffef\011\uffef" +
    "\021\uffef\022\uffef\041\uffef\042\uffef\043\uffef\044\uffef\045" +
    "\uffef\046\uffef\047\uffef\050\uffef\052\uffef\054\uffef\056\uffef" +
    "\057\uffef\060\uffef\061\uffef\062\uffef\063\uffef\001\002\000" +
    "\052\005\uffc8\006\uffc8\011\uffc8\012\uffc8\017\uffc8\020\uffc8" +
    "\021\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8\030" +
    "\uffc8\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035\uffc8\037\132" +
    "\040\uffc8\001\002\000\050\005\uffc4\006\uffc4\011\uffc4\012" +
    "\uffc4\017\127\020\uffc4\021\uffc4\023\uffc4\024\uffc4\025\uffc4" +
    "\026\uffc4\027\uffc4\030\uffc4\031\uffc4\032\uffc4\033\uffc4\034" +
    "\uffc4\035\uffc4\040\uffc4\001\002\000\054\004\121\005\uffd3" +
    "\006\uffd3\011\uffd3\012\uffd3\017\uffd3\020\uffd3\021\uffd3\023" +
    "\uffd3\024\uffd3\025\uffd3\026\uffd3\027\uffd3\030\uffd3\031\uffd3" +
    "\032\uffd3\033\uffd3\034\uffd3\035\uffd3\037\uffd3\040\uffd3\001" +
    "\002\000\004\011\120\001\002\000\056\004\uffe9\007\uffe9" +
    "\010\uffe9\011\uffe9\021\uffe9\022\uffe9\041\uffe9\042\uffe9\043" +
    "\uffe9\044\uffe9\045\uffe9\046\uffe9\047\uffe9\050\uffe9\052\uffe9" +
    "\054\uffe9\056\uffe9\057\uffe9\060\uffe9\061\uffe9\062\uffe9\063" +
    "\uffe9\001\002\000\056\004\uffea\007\uffea\010\uffea\011\uffea" +
    "\021\uffea\022\uffea\041\uffea\042\uffea\043\uffea\044\uffea\045" +
    "\uffea\046\uffea\047\uffea\050\uffea\052\uffea\054\uffea\056\uffea" +
    "\057\uffea\060\uffea\061\uffea\062\uffea\063\uffea\001\002\000" +
    "\030\004\110\005\uffb6\021\102\022\100\044\072\050\060" +
    "\054\105\060\062\061\061\062\101\063\115\001\002\000" +
    "\006\005\uffb5\006\125\001\002\000\004\005\124\001\002" +
    "\000\052\005\uffce\006\uffce\011\uffce\012\uffce\017\uffce\020" +
    "\uffce\021\uffce\023\uffce\024\uffce\025\uffce\026\uffce\027\uffce" +
    "\030\uffce\031\uffce\032\uffce\033\uffce\034\uffce\035\uffce\037" +
    "\uffce\040\uffce\001\002\000\030\004\110\005\uffb6\021\102" +
    "\022\100\044\072\050\060\054\105\060\062\061\061\062" +
    "\101\063\115\001\002\000\004\005\uffb4\001\002\000\004" +
    "\063\130\001\002\000\052\005\uffcc\006\uffcc\011\uffcc\012" +
    "\uffcc\017\uffcc\020\uffcc\021\uffcc\023\uffcc\024\uffcc\025\uffcc" +
    "\026\uffcc\027\uffcc\030\uffcc\031\uffcc\032\uffcc\033\uffcc\034" +
    "\uffcc\035\uffcc\037\uffcc\040\uffcc\001\002\000\054\005\uffa4" +
    "\006\uffa4\011\uffa4\012\uffa4\013\uffa4\017\uffa4\020\uffa4\021" +
    "\uffa4\023\uffa4\024\uffa4\025\uffa4\026\uffa4\027\uffa4\030\uffa4" +
    "\031\uffa4\032\uffa4\033\uffa4\034\uffa4\035\uffa4\037\132\040" +
    "\uffa4\001\002\000\026\004\110\021\102\022\100\044\072" +
    "\050\060\054\105\060\062\061\061\062\101\063\115\001" +
    "\002\000\050\005\uffc9\006\uffc9\011\uffc9\012\uffc9\017\uffc9" +
    "\020\uffc9\021\uffc9\023\uffc9\024\uffc9\025\uffc9\026\uffc9\027" +
    "\uffc9\030\uffc9\031\uffc9\032\uffc9\033\uffc9\034\uffc9\035\uffc9" +
    "\040\uffc9\001\002\000\004\040\135\001\002\000\054\005" +
    "\uffa5\006\uffa5\011\uffa5\012\uffa5\013\uffa5\017\uffa5\020\uffa5" +
    "\021\uffa5\023\uffa5\024\uffa5\025\uffa5\026\uffa5\027\uffa5\030" +
    "\uffa5\031\uffa5\032\uffa5\033\uffa5\034\uffa5\035\uffa5\037\uffa5" +
    "\040\uffa5\001\002\000\052\005\uffa3\006\uffa3\011\uffa3\012" +
    "\uffa3\013\uffa3\017\uffa3\020\uffa3\021\uffa3\023\uffa3\024\uffa3" +
    "\025\uffa3\026\uffa3\027\uffa3\030\uffa3\031\uffa3\032\uffa3\033" +
    "\uffa3\034\uffa3\035\uffa3\040\uffa3\001\002\000\046\004\121" +
    "\005\142\012\uffd3\017\uffd3\020\uffd3\021\uffd3\023\uffd3\024" +
    "\uffd3\025\uffd3\026\uffd3\027\uffd3\030\uffd3\031\uffd3\032\uffd3" +
    "\033\uffd3\034\uffd3\035\uffd3\037\uffd3\001\002\000\004\005" +
    "\141\001\002\000\052\005\uffca\006\uffca\011\uffca\012\uffca" +
    "\017\uffca\020\uffca\021\uffca\023\uffca\024\uffca\025\uffca\026" +
    "\uffca\027\uffca\030\uffca\031\uffca\032\uffca\033\uffca\034\uffca" +
    "\035\uffca\037\uffca\040\uffca\001\002\000\004\051\143\001" +
    "\002\000\046\005\uffc6\006\uffc6\011\uffc6\012\uffc6\020\uffc6" +
    "\021\uffc6\023\uffc6\024\uffc6\025\uffc6\026\uffc6\027\uffc6\030" +
    "\uffc6\031\uffc6\032\uffc6\033\uffc6\034\uffc6\035\uffc6\040\uffc6" +
    "\001\002\000\006\006\152\011\uffdf\001\002\000\010\006" +
    "\uffe1\011\uffe1\013\150\001\002\000\004\011\147\001\002" +
    "\000\056\004\uffee\007\uffee\010\uffee\011\uffee\021\uffee\022" +
    "\uffee\041\uffee\042\uffee\043\uffee\044\uffee\045\uffee\046\uffee" +
    "\047\uffee\050\uffee\052\uffee\054\uffee\056\uffee\057\uffee\060" +
    "\uffee\061\uffee\062\uffee\063\uffee\001\002\000\026\004\110" +
    "\021\102\022\100\044\072\050\060\054\105\060\062\061" +
    "\061\062\101\063\115\001\002\000\006\006\uffe0\011\uffe0" +
    "\001\002\000\004\063\145\001\002\000\004\011\uffde\001" +
    "\002\000\026\004\110\021\102\022\100\044\072\050\060" +
    "\054\105\060\062\061\061\062\101\063\115\001\002\000" +
    "\004\005\156\001\002\000\052\004\110\007\054\011\106" +
    "\021\102\022\100\041\005\042\007\044\072\045\066\046" +
    "\064\047\017\050\060\052\111\054\105\056\013\057\103" +
    "\060\062\061\061\062\101\063\070\001\002\000\056\004" +
    "\uffe6\007\uffe6\010\uffe6\011\uffe6\021\uffe6\022\uffe6\041\uffe6" +
    "\042\uffe6\043\uffe6\044\uffe6\045\uffe6\046\uffe6\047\uffe6\050" +
    "\uffe6\052\uffe6\054\uffe6\056\uffe6\057\uffe6\060\uffe6\061\uffe6" +
    "\062\uffe6\063\uffe6\001\002\000\004\020\162\001\002\000" +
    "\050\005\uffc3\006\uffc3\011\uffc3\012\uffc3\017\127\020\uffc4" +
    "\021\uffc3\023\uffc3\024\uffc3\025\uffc3\026\uffc3\027\uffc3\030" +
    "\uffc3\031\uffc3\032\uffc3\033\uffc3\034\uffc3\035\uffc3\040\uffc3" +
    "\001\002\000\004\063\163\001\002\000\052\005\uffcb\006" +
    "\uffcb\011\uffcb\012\uffcb\017\uffcb\020\uffcb\021\uffcb\023\uffcb" +
    "\024\uffcb\025\uffcb\026\uffcb\027\uffcb\030\uffcb\031\uffcb\032" +
    "\uffcb\033\uffcb\034\uffcb\035\uffcb\037\uffcb\040\uffcb\001\002" +
    "\000\050\005\uffc2\006\uffc2\011\uffc2\012\uffc2\017\127\020" +
    "\uffc4\021\uffc2\023\uffc2\024\uffc2\025\uffc2\026\uffc2\027\uffc2" +
    "\030\uffc2\031\uffc2\032\uffc2\033\uffc2\034\uffc2\035\uffc2\040" +
    "\uffc2\001\002\000\056\004\uffe5\007\uffe5\010\uffe5\011\uffe5" +
    "\021\uffe5\022\uffe5\041\uffe5\042\uffe5\043\uffe5\044\uffe5\045" +
    "\uffe5\046\uffe5\047\uffe5\050\uffe5\052\uffe5\054\uffe5\056\uffe5" +
    "\057\uffe5\060\uffe5\061\uffe5\062\uffe5\063\uffe5\001\002\000" +
    "\026\004\110\021\102\022\100\044\072\050\060\054\105" +
    "\060\062\061\061\062\101\063\115\001\002\000\012\005" +
    "\uffb8\006\uffb8\011\uffb8\040\uffb8\001\002\000\026\004\110" +
    "\021\102\022\100\044\072\050\060\054\105\060\062\061" +
    "\061\062\101\063\115\001\002\000\026\004\uffac\021\uffac" +
    "\022\uffac\044\uffac\050\uffac\054\uffac\060\uffac\061\uffac\062" +
    "\uffac\063\uffac\001\002\000\026\004\uffad\021\uffad\022\uffad" +
    "\044\uffad\050\uffad\054\uffad\060\uffad\061\uffad\062\uffad\063" +
    "\uffad\001\002\000\026\004\uffae\021\uffae\022\uffae\044\uffae" +
    "\050\uffae\054\uffae\060\uffae\061\uffae\062\uffae\063\uffae\001" +
    "\002\000\026\004\110\021\102\022\100\044\072\050\060" +
    "\054\105\060\062\061\061\062\101\063\115\001\002\000" +
    "\026\004\uffa9\021\uffa9\022\uffa9\044\uffa9\050\uffa9\054\uffa9" +
    "\060\uffa9\061\uffa9\062\uffa9\063\uffa9\001\002\000\026\004" +
    "\uffaa\021\uffaa\022\uffaa\044\uffaa\050\uffaa\054\uffaa\060\uffaa" +
    "\061\uffaa\062\uffaa\063\uffaa\001\002\000\026\004\uffab\021" +
    "\uffab\022\uffab\044\uffab\050\uffab\054\uffab\060\uffab\061\uffab" +
    "\062\uffab\063\uffab\001\002\000\014\005\uffba\006\uffba\011" +
    "\uffba\024\uffba\040\uffba\001\002\000\036\005\uffbc\006\uffbc" +
    "\011\uffbc\021\203\023\uffbc\024\uffbc\025\202\030\uffbc\031" +
    "\uffbc\032\uffbc\033\uffbc\034\uffbc\035\uffbc\040\uffbc\001\002" +
    "\000\026\004\uffb3\021\uffb3\022\uffb3\044\uffb3\050\uffb3\054" +
    "\uffb3\060\uffb3\061\uffb3\062\uffb3\063\uffb3\001\002\000\026" +
    "\004\uffb2\021\uffb2\022\uffb2\044\uffb2\050\uffb2\054\uffb2\060" +
    "\uffb2\061\uffb2\062\uffb2\063\uffb2\001\002\000\026\004\110" +
    "\021\102\022\100\044\072\050\060\054\105\060\062\061" +
    "\061\062\101\063\115\001\002\000\044\005\uffbe\006\uffbe" +
    "\011\uffbe\012\210\021\uffbe\023\uffbe\024\uffbe\025\uffbe\026" +
    "\207\027\206\030\uffbe\031\uffbe\032\uffbe\033\uffbe\034\uffbe" +
    "\035\uffbe\040\uffbe\001\002\000\026\004\uffaf\021\uffaf\022" +
    "\uffaf\044\uffaf\050\uffaf\054\uffaf\060\uffaf\061\uffaf\062\uffaf" +
    "\063\uffaf\001\002\000\026\004\uffb0\021\uffb0\022\uffb0\044" +
    "\uffb0\050\uffb0\054\uffb0\060\uffb0\061\uffb0\062\uffb0\063\uffb0" +
    "\001\002\000\026\004\uffb1\021\uffb1\022\uffb1\044\uffb1\050" +
    "\uffb1\054\uffb1\060\uffb1\061\uffb1\062\uffb1\063\uffb1\001\002" +
    "\000\026\004\110\021\102\022\100\044\072\050\060\054" +
    "\105\060\062\061\061\062\101\063\115\001\002\000\044" +
    "\005\uffc0\006\uffc0\011\uffc0\012\uffc0\021\uffc0\023\uffc0\024" +
    "\uffc0\025\uffc0\026\uffc0\027\uffc0\030\uffc0\031\uffc0\032\uffc0" +
    "\033\uffc0\034\uffc0\035\uffc0\040\uffc0\001\002\000\004\011" +
    "\221\001\002\000\004\011\220\001\002\000\026\004\110" +
    "\021\102\022\100\044\072\050\060\054\105\060\062\061" +
    "\061\062\101\063\115\001\002\000\004\011\217\001\002" +
    "\000\056\004\uffed\007\uffed\010\uffed\011\uffed\021\uffed\022" +
    "\uffed\041\uffed\042\uffed\043\uffed\044\uffed\045\uffed\046\uffed" +
    "\047\uffed\050\uffed\052\uffed\054\uffed\056\uffed\057\uffed\060" +
    "\uffed\061\uffed\062\uffed\063\uffed\001\002\000\056\004\uffec" +
    "\007\uffec\010\uffec\011\uffec\021\uffec\022\uffec\041\uffec\042" +
    "\uffec\043\uffec\044\uffec\045\uffec\046\uffec\047\uffec\050\uffec" +
    "\052\uffec\054\uffec\056\uffec\057\uffec\060\uffec\061\uffec\062" +
    "\uffec\063\uffec\001\002\000\056\004\uffeb\007\uffeb\010\uffeb" +
    "\011\uffeb\021\uffeb\022\uffeb\041\uffeb\042\uffeb\043\uffeb\044" +
    "\uffeb\045\uffeb\046\uffeb\047\uffeb\050\uffeb\052\uffeb\054\uffeb" +
    "\056\uffeb\057\uffeb\060\uffeb\061\uffeb\062\uffeb\063\uffeb\001" +
    "\002\000\014\041\005\042\007\047\017\056\013\063\012" +
    "\001\002\000\004\063\224\001\002\000\004\016\225\001" +
    "\002\000\026\004\110\021\102\022\100\044\072\050\060" +
    "\054\105\060\062\061\061\062\101\063\115\001\002\000" +
    "\004\005\227\001\002\000\052\004\110\007\054\011\106" +
    "\021\102\022\100\041\005\042\007\044\072\045\066\046" +
    "\064\047\017\050\060\052\111\054\105\056\013\057\103" +
    "\060\062\061\061\062\101\063\070\001\002\000\056\004" +
    "\uffe3\007\uffe3\010\uffe3\011\uffe3\021\uffe3\022\uffe3\041\uffe3" +
    "\042\uffe3\043\uffe3\044\uffe3\045\uffe3\046\uffe3\047\uffe3\050" +
    "\uffe3\052\uffe3\054\uffe3\056\uffe3\057\uffe3\060\uffe3\061\uffe3" +
    "\062\uffe3\063\uffe3\001\002\000\026\004\110\021\102\022" +
    "\100\044\072\050\060\054\105\060\062\061\061\062\101" +
    "\063\115\001\002\000\004\005\233\001\002\000\052\004" +
    "\110\007\054\011\106\021\102\022\100\041\005\042\007" +
    "\044\072\045\066\046\064\047\017\050\060\052\111\054" +
    "\105\056\013\057\103\060\062\061\061\062\101\063\070" +
    "\001\002\000\056\004\uffe8\007\uffe8\010\uffe8\011\uffe8\021" +
    "\uffe8\022\uffe8\041\uffe8\042\uffe8\043\235\044\uffe8\045\uffe8" +
    "\046\uffe8\047\uffe8\050\uffe8\052\uffe8\054\uffe8\056\uffe8\057" +
    "\uffe8\060\uffe8\061\uffe8\062\uffe8\063\uffe8\001\002\000\052" +
    "\004\110\007\054\011\106\021\102\022\100\041\005\042" +
    "\007\044\072\045\066\046\064\047\017\050\060\052\111" +
    "\054\105\056\013\057\103\060\062\061\061\062\101\063" +
    "\070\001\002\000\056\004\uffe7\007\uffe7\010\uffe7\011\uffe7" +
    "\021\uffe7\022\uffe7\041\uffe7\042\uffe7\043\uffe7\044\uffe7\045" +
    "\uffe7\046\uffe7\047\uffe7\050\uffe7\052\uffe7\054\uffe7\056\uffe7" +
    "\057\uffe7\060\uffe7\061\uffe7\062\uffe7\063\uffe7\001\002\000" +
    "\004\063\240\001\002\000\046\011\uffcc\012\uffcc\013\241" +
    "\017\uffcc\020\uffcc\021\uffcc\023\uffcc\024\uffcc\025\uffcc\026" +
    "\uffcc\027\uffcc\030\uffcc\031\uffcc\032\uffcc\033\uffcc\034\uffcc" +
    "\035\uffcc\037\uffcc\001\002\000\026\004\110\021\102\022" +
    "\100\044\072\050\060\054\105\060\062\061\061\062\101" +
    "\063\115\001\002\000\004\011\243\001\002\000\056\004" +
    "\uffe2\007\uffe2\010\uffe2\011\uffe2\021\uffe2\022\uffe2\041\uffe2" +
    "\042\uffe2\043\uffe2\044\uffe2\045\uffe2\046\uffe2\047\uffe2\050" +
    "\uffe2\052\uffe2\054\uffe2\056\uffe2\057\uffe2\060\uffe2\061\uffe2" +
    "\062\uffe2\063\uffe2\001\002\000\050\005\uffc5\006\uffc5\011" +
    "\uffc5\012\uffc5\020\uffc5\021\uffc5\023\uffc5\024\uffc5\025\uffc5" +
    "\026\uffc5\027\uffc5\030\uffc5\031\uffc5\032\uffc5\033\uffc5\034" +
    "\uffc5\035\uffc5\037\uffd9\040\uffc5\001\002\000\004\037\132" +
    "\001\002\000\046\005\uffc7\006\uffc7\011\uffc7\012\uffc7\020" +
    "\uffc7\021\uffc7\023\uffc7\024\uffc7\025\uffc7\026\uffc7\027\uffc7" +
    "\030\uffc7\031\uffc7\032\uffc7\033\uffc7\034\uffc7\035\uffc7\040" +
    "\uffc7\001\002\000\044\011\uffc9\012\uffc9\013\250\017\uffc9" +
    "\020\uffc9\021\uffc9\023\uffc9\024\uffc9\025\uffc9\026\uffc9\027" +
    "\uffc9\030\uffc9\031\uffc9\032\uffc9\033\uffc9\034\uffc9\035\uffc9" +
    "\001\002\000\026\004\110\021\102\022\100\044\072\050" +
    "\060\054\105\060\062\061\061\062\101\063\115\001\002" +
    "\000\004\011\252\001\002\000\056\004\uffe4\007\uffe4\010" +
    "\uffe4\011\uffe4\021\uffe4\022\uffe4\041\uffe4\042\uffe4\043\uffe4" +
    "\044\uffe4\045\uffe4\046\uffe4\047\uffe4\050\uffe4\052\uffe4\054" +
    "\uffe4\056\uffe4\057\uffe4\060\uffe4\061\uffe4\062\uffe4\063\uffe4" +
    "\001\002\000\006\005\ufffa\006\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\251\000\014\002\015\003\007\004\005\016\010\017" +
    "\003\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\003\007\004\042\016" +
    "\010\017\003\001\001\000\006\036\037\037\036\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\027\001\001\000\010\007\032\016\010\017" +
    "\030\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\036\037\037\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\005\047\006\046\016\010\017\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\005\047\006\051\016\010\017\045\001\001" +
    "\000\002\001\001\000\004\011\054\001\001\000\004\012" +
    "\055\001\001\000\002\001\001\000\034\011\111\013\074" +
    "\016\010\017\103\021\056\022\062\023\064\024\066\025" +
    "\070\026\072\027\073\030\075\031\076\001\001\000\006" +
    "\040\130\041\246\001\001\000\004\016\244\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\034\210\001\001\000\002" +
    "\001\001\000\004\033\203\001\001\000\004\035\167\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\021\112\022\163\023\157\001\001\000\002\001" +
    "\001\000\010\021\112\022\160\023\157\001\001\000\002" +
    "\001\001\000\006\014\143\015\145\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\021\112" +
    "\022\113\023\064\024\066\025\070\026\072\027\073\030" +
    "\075\031\137\001\001\000\024\021\112\022\113\023\064" +
    "\024\066\025\070\026\072\027\073\030\075\031\115\001" +
    "\001\000\002\001\001\000\006\040\130\041\132\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\021\112\022\113" +
    "\023\064\024\066\025\070\026\072\027\073\030\075\031" +
    "\121\032\122\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\021\112\022\113\023\064\024" +
    "\066\025\070\026\072\027\073\030\075\031\121\032\125" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\040\130\041\135\001\001\000\024\021\112" +
    "\022\113\023\064\024\066\025\070\026\072\027\073\030" +
    "\075\031\133\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\021\112\022\113\023\064" +
    "\024\066\025\070\026\072\027\073\030\075\031\150\001" +
    "\001\000\002\001\001\000\006\014\143\015\152\001\001" +
    "\000\002\001\001\000\024\021\112\022\113\023\064\024" +
    "\066\025\070\026\072\027\073\030\075\031\154\001\001" +
    "\000\002\001\001\000\034\011\111\013\156\016\010\017" +
    "\103\021\056\022\062\023\064\024\066\025\070\026\072" +
    "\027\073\030\075\031\076\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\021" +
    "\112\022\113\023\064\024\066\025\070\026\072\027\073" +
    "\030\075\031\166\001\001\000\002\001\001\000\016\021" +
    "\112\022\113\023\064\024\066\025\070\026\200\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\021\112\022\113\023\064\024\066\025\070\026\072" +
    "\027\073\030\177\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\203" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\021" +
    "\112\022\113\023\064\024\066\025\204\001\001\000\004" +
    "\034\210\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\021\112\022\113\023\064\024\211" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\021\112\022\113\023\064\024\066\025\070" +
    "\026\072\027\073\030\075\031\215\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\016\010\017\222\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\021\112\022\113\023\064\024\066" +
    "\025\070\026\072\027\073\030\075\031\225\001\001\000" +
    "\002\001\001\000\034\011\111\013\227\016\010\017\103" +
    "\021\056\022\062\023\064\024\066\025\070\026\072\027" +
    "\073\030\075\031\076\001\001\000\002\001\001\000\024" +
    "\021\112\022\113\023\064\024\066\025\070\026\072\027" +
    "\073\030\075\031\231\001\001\000\002\001\001\000\034" +
    "\011\111\013\233\016\010\017\103\021\056\022\062\023" +
    "\064\024\066\025\070\026\072\027\073\030\075\031\076" +
    "\001\001\000\002\001\001\000\034\011\111\013\235\016" +
    "\010\017\103\021\056\022\062\023\064\024\066\025\070" +
    "\026\072\027\073\030\075\031\076\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\021\112" +
    "\022\113\023\064\024\066\025\070\026\072\027\073\030" +
    "\075\031\241\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\040\130\041\245\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\021\112\022\113" +
    "\023\064\024\066\025\070\026\072\027\073\030\075\031" +
    "\250\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public javalette.Absyn.Prog pProg() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (javalette.Absyn.Prog) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Prog EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Prog start_val = (javalette.Absyn.Prog)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Prog ::= ListTopDef 
            {
              javalette.Absyn.Prog RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListTopDef p_1 = (javalette.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Program(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Program)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Program)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Program)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Program)RESULT).line_num = -1;
  ((javalette.Absyn.Program)RESULT).col_num = -1;
  ((javalette.Absyn.Program)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Prog",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // TopDef ::= Type _IDENT_ _SYMB_0 ListArg _SYMB_1 Blk 
            {
              javalette.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		javalette.Absyn.Type p_1 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.ListArg p_4 = (javalette.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Blk p_6 = (javalette.Absyn.Blk)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.FnDef(p_1,p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((javalette.Absyn.FnDef)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.FnDef)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.FnDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.FnDef)RESULT).line_num = -1;
  ((javalette.Absyn.FnDef)RESULT).col_num = -1;
  ((javalette.Absyn.FnDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // TopDef ::= _SYMB_39 _IDENT_ _SYMB_3 ListMember _SYMB_4 _SYMB_5 
            {
              javalette.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.ListMember p_4 = (javalette.Absyn.ListMember)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.StructDef(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((javalette.Absyn.StructDef)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.StructDef)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.StructDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.StructDef)RESULT).line_num = -1;
  ((javalette.Absyn.StructDef)RESULT).col_num = -1;
  ((javalette.Absyn.StructDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // TopDef ::= _SYMB_41 _SYMB_39 _IDENT_ _SYMB_6 _IDENT_ _SYMB_5 
            {
              javalette.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.PtrTypeDef(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((javalette.Absyn.PtrTypeDef)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.PtrTypeDef)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.PtrTypeDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.PtrTypeDef)RESULT).line_num = -1;
  ((javalette.Absyn.PtrTypeDef)RESULT).col_num = -1;
  ((javalette.Absyn.PtrTypeDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ListTopDef ::= TopDef 
            {
              javalette.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.TopDef p_1 = (javalette.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListTopDef(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ListTopDef ::= TopDef ListTopDef 
            {
              javalette.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.TopDef p_1 = (javalette.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListTopDef p_2 = (javalette.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; p_2.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Arg ::= Type _IDENT_ 
            {
              javalette.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Type p_1 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Argument(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Argument)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Argument)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Argument)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Argument)RESULT).line_num = -1;
  ((javalette.Absyn.Argument)RESULT).col_num = -1;
  ((javalette.Absyn.Argument)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ListArg ::= 
            {
              javalette.Absyn.ListArg RESULT =null;
		 RESULT = new javalette.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ListArg ::= Arg 
            {
              javalette.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Arg p_1 = (javalette.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ListArg ::= Arg _SYMB_2 ListArg 
            {
              javalette.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Arg p_1 = (javalette.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListArg p_3 = (javalette.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Member ::= Type _IDENT_ _SYMB_5 
            {
              javalette.Absyn.Member RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Type p_1 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.StructMember(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.StructMember)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.StructMember)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.StructMember)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.StructMember)RESULT).line_num = -1;
  ((javalette.Absyn.StructMember)RESULT).col_num = -1;
  ((javalette.Absyn.StructMember)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Member",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ListMember ::= 
            {
              javalette.Absyn.ListMember RESULT =null;
		 RESULT = new javalette.Absyn.ListMember(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListMember",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ListMember ::= ListMember Member 
            {
              javalette.Absyn.ListMember RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.ListMember p_1 = (javalette.Absyn.ListMember)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Member p_2 = (javalette.Absyn.Member)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListMember",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Blk ::= _SYMB_3 ListStmt _SYMB_4 
            {
              javalette.Absyn.Blk RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.ListStmt p_2 = (javalette.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Block(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Block)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Block)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Block)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Block)RESULT).line_num = -1;
  ((javalette.Absyn.Block)RESULT).col_num = -1;
  ((javalette.Absyn.Block)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Blk",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ListStmt ::= 
            {
              javalette.Absyn.ListStmt RESULT =null;
		 RESULT = new javalette.Absyn.ListStmt(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ListStmt ::= ListStmt Stmt 
            {
              javalette.Absyn.ListStmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.ListStmt p_1 = (javalette.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Stmt p_2 = (javalette.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Stmt ::= _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Empty();
((javalette.Absyn.Empty)RESULT).line_num = -1;
((javalette.Absyn.Empty)RESULT).col_num = -1;
((javalette.Absyn.Empty)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Stmt ::= Blk 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Blk p_1 = (javalette.Absyn.Blk)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.BStmt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.BStmt)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.BStmt)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.BStmt)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.BStmt)RESULT).line_num = -1;
  ((javalette.Absyn.BStmt)RESULT).col_num = -1;
  ((javalette.Absyn.BStmt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Stmt ::= Type ListItem _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Type p_1 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.ListItem p_2 = (javalette.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Decl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Decl)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Decl)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Decl)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Decl)RESULT).line_num = -1;
  ((javalette.Absyn.Decl)RESULT).col_num = -1;
  ((javalette.Absyn.Decl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Stmt ::= _IDENT_ _SYMB_7 Expr _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Ass(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Ass)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Ass)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Ass)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Ass)RESULT).line_num = -1;
  ((javalette.Absyn.Ass)RESULT).col_num = -1;
  ((javalette.Absyn.Ass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Stmt ::= _IDENT_ _SYMB_8 _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Incr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Incr)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Incr)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Incr)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Incr)RESULT).line_num = -1;
  ((javalette.Absyn.Incr)RESULT).col_num = -1;
  ((javalette.Absyn.Incr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stmt ::= _IDENT_ _SYMB_9 _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Decr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Decr)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Decr)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Decr)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Decr)RESULT).line_num = -1;
  ((javalette.Absyn.Decr)RESULT).col_num = -1;
  ((javalette.Absyn.Decr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Stmt ::= _SYMB_38 Expr _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_2 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Ret(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Ret)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Ret)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Ret)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Ret)RESULT).line_num = -1;
  ((javalette.Absyn.Ret)RESULT).col_num = -1;
  ((javalette.Absyn.Ret)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Stmt ::= _SYMB_38 _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.VRet();
((javalette.Absyn.VRet)RESULT).line_num = -1;
((javalette.Absyn.VRet)RESULT).col_num = -1;
((javalette.Absyn.VRet)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Stmt ::= _SYMB_34 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Stmt p_5 = (javalette.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Cond(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Cond)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Cond)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Cond)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Cond)RESULT).line_num = -1;
  ((javalette.Absyn.Cond)RESULT).col_num = -1;
  ((javalette.Absyn.Cond)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Stmt ::= _SYMB_34 _SYMB_0 Expr _SYMB_1 Stmt _SYMB_31 Stmt 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Stmt p_5 = (javalette.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Stmt p_7 = (javalette.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.CondElse(p_3,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((javalette.Absyn.CondElse)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.CondElse)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.CondElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.CondElse)RESULT).line_num = -1;
  ((javalette.Absyn.CondElse)RESULT).col_num = -1;
  ((javalette.Absyn.CondElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Stmt ::= _SYMB_43 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Stmt p_5 = (javalette.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.While(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((javalette.Absyn.While)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.While)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.While)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.While)RESULT).line_num = -1;
  ((javalette.Absyn.While)RESULT).col_num = -1;
  ((javalette.Absyn.While)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Stmt ::= Expr _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.SExp(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.SExp)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.SExp)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.SExp)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.SExp)RESULT).line_num = -1;
  ((javalette.Absyn.SExp)RESULT).col_num = -1;
  ((javalette.Absyn.SExp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Stmt ::= Expr8 ListBre _SYMB_7 Expr _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		javalette.Absyn.ListBre p_2 = (javalette.Absyn.ListBre)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_4 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ArrayAss(p_1,p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((javalette.Absyn.ArrayAss)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.ArrayAss)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.ArrayAss)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.ArrayAss)RESULT).line_num = -1;
  ((javalette.Absyn.ArrayAss)RESULT).col_num = -1;
  ((javalette.Absyn.ArrayAss)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Stmt ::= _SYMB_33 _SYMB_0 Type _IDENT_ _SYMB_10 Expr _SYMB_1 Stmt 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		javalette.Absyn.Type p_3 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_6 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Stmt p_8 = (javalette.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ForEach(p_3,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((javalette.Absyn.ForEach)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.ForEach)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.ForEach)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.ForEach)RESULT).line_num = -1;
  ((javalette.Absyn.ForEach)RESULT).col_num = -1;
  ((javalette.Absyn.ForEach)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Stmt ::= Expr7 _SYMB_11 _IDENT_ _SYMB_7 Expr _SYMB_5 
            {
              javalette.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_5 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.StructAss(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((javalette.Absyn.StructAss)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.StructAss)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.StructAss)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.StructAss)RESULT).line_num = -1;
  ((javalette.Absyn.StructAss)RESULT).col_num = -1;
  ((javalette.Absyn.StructAss)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Item ::= _IDENT_ 
            {
              javalette.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.NoInit(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.NoInit)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.NoInit)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.NoInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.NoInit)RESULT).line_num = -1;
  ((javalette.Absyn.NoInit)RESULT).col_num = -1;
  ((javalette.Absyn.NoInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Item ::= _IDENT_ _SYMB_7 Expr 
            {
              javalette.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Init(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Init)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Init)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Init)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Init)RESULT).line_num = -1;
  ((javalette.Absyn.Init)RESULT).col_num = -1;
  ((javalette.Absyn.Init)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ListItem ::= Item 
            {
              javalette.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Item p_1 = (javalette.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ListItem ::= Item _SYMB_2 ListItem 
            {
              javalette.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Item p_1 = (javalette.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListItem p_3 = (javalette.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // TypeBase ::= _SYMB_35 
            {
              javalette.Absyn.TypeBase RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Int();
((javalette.Absyn.Int)RESULT).line_num = -1;
((javalette.Absyn.Int)RESULT).col_num = -1;
((javalette.Absyn.Int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeBase",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // TypeBase ::= _SYMB_30 
            {
              javalette.Absyn.TypeBase RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Doub();
((javalette.Absyn.Doub)RESULT).line_num = -1;
((javalette.Absyn.Doub)RESULT).col_num = -1;
((javalette.Absyn.Doub)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeBase",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // TypeBase ::= _SYMB_29 
            {
              javalette.Absyn.TypeBase RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Bool();
((javalette.Absyn.Bool)RESULT).line_num = -1;
((javalette.Absyn.Bool)RESULT).col_num = -1;
((javalette.Absyn.Bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeBase",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // TypeBase ::= _SYMB_42 
            {
              javalette.Absyn.TypeBase RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Void();
((javalette.Absyn.Void)RESULT).line_num = -1;
((javalette.Absyn.Void)RESULT).col_num = -1;
((javalette.Absyn.Void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeBase",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // TypeBase ::= _IDENT_ 
            {
              javalette.Absyn.TypeBase RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Ptr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Ptr)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Ptr)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Ptr)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Ptr)RESULT).line_num = -1;
  ((javalette.Absyn.Ptr)RESULT).col_num = -1;
  ((javalette.Absyn.Ptr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeBase",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Type ::= TypeBase 
            {
              javalette.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.TypeBase p_1 = (javalette.Absyn.TypeBase)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Base(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Base)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Base)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Base)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Base)RESULT).line_num = -1;
  ((javalette.Absyn.Base)RESULT).col_num = -1;
  ((javalette.Absyn.Base)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Type ::= TypeBase ListBr 
            {
              javalette.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.TypeBase p_1 = (javalette.Absyn.TypeBase)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListBr p_2 = (javalette.Absyn.ListBr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Array(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Array)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Array)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Array)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Array)RESULT).line_num = -1;
  ((javalette.Absyn.Array)RESULT).col_num = -1;
  ((javalette.Absyn.Array)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ListType ::= 
            {
              javalette.Absyn.ListType RESULT =null;
		 RESULT = new javalette.Absyn.ListType(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ListType ::= Type 
            {
              javalette.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Type p_1 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListType(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ListType ::= Type _SYMB_2 ListType 
            {
              javalette.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Type p_1 = (javalette.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListType p_3 = (javalette.Absyn.ListType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Expr8 ::= _IDENT_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EVar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EVar)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EVar)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EVar)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EVar)RESULT).line_num = -1;
  ((javalette.Absyn.EVar)RESULT).col_num = -1;
  ((javalette.Absyn.EVar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Expr8 ::= _INTEGER_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ELitInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.ELitInt)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.ELitInt)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.ELitInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.ELitInt)RESULT).line_num = -1;
  ((javalette.Absyn.ELitInt)RESULT).col_num = -1;
  ((javalette.Absyn.ELitInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Expr8 ::= _DOUBLE_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_1 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ELitDoub(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.ELitDoub)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.ELitDoub)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.ELitDoub)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.ELitDoub)RESULT).line_num = -1;
  ((javalette.Absyn.ELitDoub)RESULT).col_num = -1;
  ((javalette.Absyn.ELitDoub)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Expr8 ::= _SYMB_40 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ELitTrue();
((javalette.Absyn.ELitTrue)RESULT).line_num = -1;
((javalette.Absyn.ELitTrue)RESULT).col_num = -1;
((javalette.Absyn.ELitTrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Expr8 ::= _SYMB_32 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ELitFalse();
((javalette.Absyn.ELitFalse)RESULT).line_num = -1;
((javalette.Absyn.ELitFalse)RESULT).col_num = -1;
((javalette.Absyn.ELitFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Expr8 ::= _IDENT_ _SYMB_0 ListExpr _SYMB_1 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.ListExpr p_3 = (javalette.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EApp(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EApp)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EApp)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EApp)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EApp)RESULT).line_num = -1;
  ((javalette.Absyn.EApp)RESULT).col_num = -1;
  ((javalette.Absyn.EApp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Expr8 ::= _STRING_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EString)RESULT).line_num = -1;
  ((javalette.Absyn.EString)RESULT).col_num = -1;
  ((javalette.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Expr8 ::= Expr7 _SYMB_11 _IDENT_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EReference(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EReference)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EReference)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EReference)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EReference)RESULT).line_num = -1;
  ((javalette.Absyn.EReference)RESULT).col_num = -1;
  ((javalette.Absyn.EReference)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Expr8 ::= Expr6 _SYMB_12 _IDENT_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EAttribute(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EAttribute)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EAttribute)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EAttribute)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EAttribute)RESULT).line_num = -1;
  ((javalette.Absyn.EAttribute)RESULT).col_num = -1;
  ((javalette.Absyn.EAttribute)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Expr8 ::= _SYMB_0 Expr _SYMB_1 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_2 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr8",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Expr7 ::= Expr8 ListBre 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListBre p_2 = (javalette.Absyn.ListBre)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EArray(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EArray)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EArray)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EArray)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EArray)RESULT).line_num = -1;
  ((javalette.Absyn.EArray)RESULT).col_num = -1;
  ((javalette.Absyn.EArray)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Expr7 ::= Expr8 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Expr6 ::= _SYMB_36 TypeBase ListBre 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.TypeBase p_2 = (javalette.Absyn.TypeBase)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListBre p_3 = (javalette.Absyn.ListBre)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EArrayInit(p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EArrayInit)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EArrayInit)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EArrayInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EArrayInit)RESULT).line_num = -1;
  ((javalette.Absyn.EArrayInit)RESULT).col_num = -1;
  ((javalette.Absyn.EArrayInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Expr6 ::= _SYMB_0 _IDENT_ _SYMB_1 _SYMB_37 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ENullPointer(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.ENullPointer)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.ENullPointer)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.ENullPointer)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.ENullPointer)RESULT).line_num = -1;
  ((javalette.Absyn.ENullPointer)RESULT).col_num = -1;
  ((javalette.Absyn.ENullPointer)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Expr6 ::= _SYMB_36 _IDENT_ 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EStructInit(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EStructInit)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EStructInit)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EStructInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EStructInit)RESULT).line_num = -1;
  ((javalette.Absyn.EStructInit)RESULT).col_num = -1;
  ((javalette.Absyn.EStructInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Expr6 ::= Expr7 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Expr5 ::= _SYMB_13 Expr7 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_2 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Neg(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Neg)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Neg)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Neg)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Neg)RESULT).line_num = -1;
  ((javalette.Absyn.Neg)RESULT).col_num = -1;
  ((javalette.Absyn.Neg)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Expr5 ::= _SYMB_14 Expr7 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_2 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Not(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.Not)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.Not)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.Not)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.Not)RESULT).line_num = -1;
  ((javalette.Absyn.Not)RESULT).col_num = -1;
  ((javalette.Absyn.Not)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Expr5 ::= Expr6 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Expr4 ::= Expr4 MulOp Expr5 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.MulOp p_2 = (javalette.Absyn.MulOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EMul(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EMul)RESULT).line_num = -1;
  ((javalette.Absyn.EMul)RESULT).col_num = -1;
  ((javalette.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Expr4 ::= Expr5 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Expr3 ::= Expr3 AddOp Expr4 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.AddOp p_2 = (javalette.Absyn.AddOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EAdd(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EAdd)RESULT).line_num = -1;
  ((javalette.Absyn.EAdd)RESULT).col_num = -1;
  ((javalette.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Expr3 ::= Expr4 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Expr2 ::= Expr2 RelOp Expr3 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.RelOp p_2 = (javalette.Absyn.RelOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ERel(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.ERel)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.ERel)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.ERel)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.ERel)RESULT).line_num = -1;
  ((javalette.Absyn.ERel)RESULT).col_num = -1;
  ((javalette.Absyn.ERel)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Expr2 ::= Expr3 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Expr1 ::= Expr2 _SYMB_15 Expr1 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EAnd)RESULT).line_num = -1;
  ((javalette.Absyn.EAnd)RESULT).col_num = -1;
  ((javalette.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Expr1 ::= Expr2 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Expr ::= Expr1 _SYMB_16 Expr 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_3 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((javalette.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.EOr)RESULT).line_num = -1;
  ((javalette.Absyn.EOr)RESULT).col_num = -1;
  ((javalette.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Expr ::= Expr1 
            {
              javalette.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ListExpr ::= 
            {
              javalette.Absyn.ListExpr RESULT =null;
		 RESULT = new javalette.Absyn.ListExpr(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ListExpr ::= Expr 
            {
              javalette.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListExpr(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ListExpr ::= Expr _SYMB_2 ListExpr 
            {
              javalette.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		javalette.Absyn.Expr p_1 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListExpr p_3 = (javalette.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // AddOp ::= _SYMB_17 
            {
              javalette.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Plus();
((javalette.Absyn.Plus)RESULT).line_num = -1;
((javalette.Absyn.Plus)RESULT).col_num = -1;
((javalette.Absyn.Plus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // AddOp ::= _SYMB_13 
            {
              javalette.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Minus();
((javalette.Absyn.Minus)RESULT).line_num = -1;
((javalette.Absyn.Minus)RESULT).col_num = -1;
((javalette.Absyn.Minus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // MulOp ::= _SYMB_6 
            {
              javalette.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Times();
((javalette.Absyn.Times)RESULT).line_num = -1;
((javalette.Absyn.Times)RESULT).col_num = -1;
((javalette.Absyn.Times)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // MulOp ::= _SYMB_18 
            {
              javalette.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Div();
((javalette.Absyn.Div)RESULT).line_num = -1;
((javalette.Absyn.Div)RESULT).col_num = -1;
((javalette.Absyn.Div)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // MulOp ::= _SYMB_19 
            {
              javalette.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.Mod();
((javalette.Absyn.Mod)RESULT).line_num = -1;
((javalette.Absyn.Mod)RESULT).col_num = -1;
((javalette.Absyn.Mod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // RelOp ::= _SYMB_20 
            {
              javalette.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.LTH();
((javalette.Absyn.LTH)RESULT).line_num = -1;
((javalette.Absyn.LTH)RESULT).col_num = -1;
((javalette.Absyn.LTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // RelOp ::= _SYMB_21 
            {
              javalette.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.LE();
((javalette.Absyn.LE)RESULT).line_num = -1;
((javalette.Absyn.LE)RESULT).col_num = -1;
((javalette.Absyn.LE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // RelOp ::= _SYMB_22 
            {
              javalette.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.GTH();
((javalette.Absyn.GTH)RESULT).line_num = -1;
((javalette.Absyn.GTH)RESULT).col_num = -1;
((javalette.Absyn.GTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // RelOp ::= _SYMB_23 
            {
              javalette.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.GE();
((javalette.Absyn.GE)RESULT).line_num = -1;
((javalette.Absyn.GE)RESULT).col_num = -1;
((javalette.Absyn.GE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // RelOp ::= _SYMB_24 
            {
              javalette.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.EQU();
((javalette.Absyn.EQU)RESULT).line_num = -1;
((javalette.Absyn.EQU)RESULT).col_num = -1;
((javalette.Absyn.EQU)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // RelOp ::= _SYMB_25 
            {
              javalette.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.NE();
((javalette.Absyn.NE)RESULT).line_num = -1;
((javalette.Absyn.NE)RESULT).col_num = -1;
((javalette.Absyn.NE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Br ::= _SYMB_26 
            {
              javalette.Absyn.Br RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.BrR();
((javalette.Absyn.BrR)RESULT).line_num = -1;
((javalette.Absyn.BrR)RESULT).col_num = -1;
((javalette.Absyn.BrR)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Br",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ListBr ::= Br 
            {
              javalette.Absyn.ListBr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Br p_1 = (javalette.Absyn.Br)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListBr(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListBr",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ListBr ::= Br ListBr 
            {
              javalette.Absyn.ListBr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Br p_1 = (javalette.Absyn.Br)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListBr p_2 = (javalette.Absyn.ListBr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; p_2.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListBr",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Bre ::= _SYMB_27 Expr _SYMB_28 
            {
              javalette.Absyn.Bre RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Expr p_2 = (javalette.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.BreR(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((javalette.Absyn.BreR)RESULT).line_num = leftLoc.getLine();
  ((javalette.Absyn.BreR)RESULT).col_num = leftLoc.getColumn();
  ((javalette.Absyn.BreR)RESULT).offset = leftLoc.getOffset();
} else {
  ((javalette.Absyn.BreR)RESULT).line_num = -1;
  ((javalette.Absyn.BreR)RESULT).col_num = -1;
  ((javalette.Absyn.BreR)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Bre",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ListBre ::= Bre 
            {
              javalette.Absyn.ListBre RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.Bre p_1 = (javalette.Absyn.Bre)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new javalette.Absyn.ListBre(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListBre",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // ListBre ::= Bre ListBre 
            {
              javalette.Absyn.ListBre RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		javalette.Absyn.Bre p_1 = (javalette.Absyn.Bre)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		javalette.Absyn.ListBre p_2 = (javalette.Absyn.ListBre)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; p_2.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListBre",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
